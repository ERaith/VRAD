{"version":3,"sources":["Components/Login/Login.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/UserProfile/UserProfile.js","Components/AreaCard/AreaCard.js","Components/AreaContainer/AreaContainer.js","constants/Constants.js","Components/LocationCard/LocationCard.js","Components/LocationContainer/LocationContainer.js","Components/LocationListingCard/LocationListingCard.js","Components/Breadcrumb/Breadcrumb.js","Components/Dashboard/Dashboard.js","ApiCalls/ApiCalls.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["validEmailRegex","RegExp","Login","handleChange","event","preventDefault","target","name","value","errors","state","length","email","test","purpose","setState","handleSubmit","validateForm","props","login","console","error","this","isEnabled","className","type","placeholder","onChange","aria-label","to","disabled","onClick","Component","Header","isLoggedIn","toggleLogin","blankUser","userInfo","favoriteLocations","listings","currentView","Footer","href","rel","UserProfile","goToFavRentals","pathName","greeting","includes","AreaCard","areaInfo","changeView","areaTitle","nickName","buttonText","areaURL","toLowerCase","split","join","location","about","details","AreaContainer","areas","areaCards","map","area","key","BASE_URL","LocationCard","listingData","address","listing_id","isFavorite","areaName","urlName","src","alt","street","favorite","goToListing","LocationContainer","componentDidMount","componentDidUpdate","prevState","isLoading","listing","React","LocationListingCard","currentListing","uniqueKey","locationFeatures","features","feat","featureItem","zip","superhost","cost_per_night","beds","baths","Breadcrumb","style","listStyleType","padding","breadCrumbs","path","shift","breadCrumbsLinks","reduce","crumbs","curVal","index","paths","push","link","linkText","newPath","prevPath","tempIndex","route","routeHTML","endrouteHTML","lastIndex","breadCrumbStyle","child","routeConstruction","Dashboard","favoriteListingData","render","pathname","exact","match","params","id","fetchLocations","promises","fetch","then","res","json","catch","err","Promise","all","getAreaDetails","areaData","AREA_ENDPOINT","response","App","a","areasList","userData","userState","view","destinationURL","areaListings","data","favoriteListings","updatedState","filteredFavoritesData","filteredArray","filter","favoriteData","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yUAIMA,EAAkBC,OAEtB,0HAsHaC,E,kDAlHb,aAAe,IAAD,8BACZ,gBAaFC,aAAe,SAAAC,GACbA,EAAMC,iBADgB,MAEED,EAAME,OAAtBC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MACVC,EAAS,EAAKC,MAAMD,OAExB,OAAQF,GACN,IAAK,OACHE,EAAOF,KACLC,EAAMG,OAAS,EAAI,uCAAyC,GAC9D,MACF,IAAK,QACHF,EAAOG,MAAQZ,EAAgBa,KAAKL,GAAS,GAAK,sBAClD,MACF,IAAK,UACHC,EAAOK,QACK,YAAVN,EAAsB,+BAAiC,GAM7D,EAAKO,SAAL,aAAgBN,UAASF,EAAOC,KAnCpB,EAsCdQ,aAAe,WACb,GAAI,EAAKC,aAAa,EAAKP,MAAMD,QAAS,CAAC,IAAD,EACP,EAAKC,MAA9BH,EADgC,EAChCA,KAAMK,EAD0B,EAC1BA,MAAOE,EADmB,EACnBA,QACrB,EAAKI,MAAMC,MAAM,CACfZ,KAAMA,EACNK,MAAOA,EACPE,QAASA,SAGXM,QAAQC,MAAM,iBA/CJ,EAmDdJ,aAAe,WACb,IADmB,EAEa,EAAKP,MAA7BD,EAFW,EAEXA,OAAQF,EAFG,EAEHA,KAAMK,EAFH,EAEGA,MAOtB,OAL0B,IAAxBH,EAAOG,MAAMD,QACU,IAAvBF,EAAOF,KAAKI,QACH,KAATJ,GACU,KAAVK,GAC0B,IAA1BH,EAAOK,QAAQH,QAzDjB,EAAKD,MAAQ,CACXH,KAAM,GACNK,MAAO,GACPE,QAAS,GACTL,OAAQ,CACNF,KAAM,GACNK,MAAO,GACPE,QAAS,YATD,E,qDA+DJ,IAAD,SACkCQ,KAAKZ,MAAtCD,EADD,EACCA,OAAQF,EADT,EACSA,KAAMK,EADf,EACeA,MAAOE,EADtB,EACsBA,QACvBS,EAAYD,KAAKL,eACvB,OACE,8BACE,yBAAKO,UAAU,iBACb,0BAAMA,UAAU,SAASf,EAAOF,MAChC,2BACEkB,KAAK,OACLC,YAAY,YACZnB,KAAK,OACLC,MAAOD,EACPoB,SAAU,SAAAvB,GAAK,OAAI,EAAKD,aAAaC,OAIzC,yBAAKoB,UAAU,iBACb,0BAAMA,UAAU,SAASf,EAAOG,OAChC,2BACEa,KAAK,OACLC,YAAY,qBACZnB,KAAK,QACLC,MAAOI,EACPe,SAAU,SAAAvB,GAAK,OAAI,EAAKD,aAAaC,OAGzC,yBAAKoB,UAAU,iBACb,4BACEjB,KAAK,UACLqB,aAAW,oBACXpB,MAAOM,EACPa,SAAU,SAAAvB,GAAK,OAAI,EAAKD,aAAaC,KAErC,4BAAQI,MAAM,WAAd,oBACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,WACA,4BAAQA,MAAM,SAAd,YAGJ,kBAAC,IAAD,CAAMqB,GAAG,UACP,4BAAQC,UAAWP,EAAWQ,QAAST,KAAKN,cAA5C,e,GAxGUgB,aC0BLC,EA/BA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACtBC,EAAY,CAChBF,YAAY,EACZG,SAAU,CACR9B,KAAM,GACNK,MAAO,GACPE,QAAS,GACTwB,kBAAmB,IAErBC,SAAS,GACTC,YAAa,SAGf,OACE,gCACE,yBAAKhB,UAAU,QAAf,QACCU,GACC,kBAAC,IAAD,CACEL,GAAG,IACHE,QAAS,kBAAMI,EAAYC,KAF7B,aCGOK,EAtBA,WACb,OACE,gCACE,uCAEE,6CACe,IACb,uBAAGC,KAAK,4BAA4BpC,OAAO,SAASqC,IAAM,uBAA1D,mBAIF,iDACmB,IACjB,uBAAGD,KAAK,gCAAgCpC,OAAO,SAASqC,IAAM,uBAA9D,0B,eCmCKC,EA7CK,SAAC,GAA0C,IAAxCP,EAAuC,EAAvCA,SAAUQ,EAA6B,EAA7BA,eAAeC,EAAc,EAAdA,SAEtCvC,EAA4C8B,EAA5C9B,KAAMK,EAAsCyB,EAAtCzB,MAAOE,EAA+BuB,EAA/BvB,QAASwB,EAAsBD,EAAtBC,kBACxBS,EAAQ,gFAA4EjC,EAA5E,UAWd,OACE,yBAAKU,UAAU,gBACb,yBAAKA,UAAU,kBACb,+CAAiBjB,EAAjB,MACA,uBAAGiB,UAAU,YAAYuB,GACzB,uBAAGvB,UAAU,SAASZ,IAExB,yBAAKY,UAAU,aACb,oDACA,uBAAGA,UAAU,WAAWV,GACxB,kBAAC,IAAD,CACEe,GApBHiB,EAASE,SAAS,mBACZ,aACCF,EAASE,SAAS,aACnB,SAEA,cAiBH,4BACExB,UAAasB,EAASE,SAAS,aAAa,yBAAyB,2BACrEjB,QAASc,GAFX,qBAGqB,8BAAOP,EAAkB3B,WAGlD,gCCFSsC,EA/BE,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACtBC,EAAYF,EAAS3C,OAAS2C,EAASG,SAA3B,UACXH,EAAS3C,KADE,eACS2C,EAASG,SADlB,KAEdH,EAAS3C,KAEP+C,EAAU,eAAWJ,EAASX,SAAS5B,OAA7B,wBAAmDuC,EAASG,UAEtEE,EAAUL,EAAS3C,KAAKiD,cAAcC,MAAM,KAAKC,KAAK,KAE5D,OACE,yBAAKlC,UAAU,aACb,yBAAKA,UAAU,QACb,4BAAK4B,GACL,uBAAG5B,UAAU,YAAY0B,EAASS,UAClC,2BAAIT,EAASU,QAEf,kBAAC,IAAD,CACE/B,GAAE,iBAAY0B,GACdxB,QAAS,kBAAMoB,EAAW,oBAAqBD,EAASW,QAASX,EAASX,YAE1E,gCAASe,MCEFQ,EAvBO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOZ,EAAiB,EAAjBA,WAExBa,EAAYD,EAAME,KAAI,SAAAC,GAAI,OAC9B,kBAAC,EAAD,CACEC,IAAKD,EAAK3D,KACV2C,SAAUgB,EACVf,WAAYA,OAIhB,OAEE,yBAAK3B,UAAU,kBACZwC,ICjBMI,EAAW,wCC2DTC,EAtDM,SAAAnD,GAAU,IAAD,EAKxBA,EAAMoD,YAHRC,EAF0B,EAE1BA,QACAhE,EAH0B,EAG1BA,KACAiE,EAJ0B,EAI1BA,WAEMC,EAAyBvD,EAAzBuD,WAAYC,EAAaxD,EAAbwD,SACdC,EAAUpE,EAAKiD,cAAcC,MAAM,KAAKC,KAAK,KAEnD,OACE,6BAASlC,UAAU,QACjB,yBAAKA,UAAU,iBACb,yBAAKoD,IAAG,UDhBQ,WCgBQJ,EAAhB,UAAoCK,IAAOtE,EAAK,WAE1D,yBAAKiB,UAAU,kBACb,wBAAIA,UAAU,eAAeI,aAAYrB,GACtCA,GAEH,wBAAIqB,aAAY2C,EAAQO,QAASP,EAAQO,QACzC,yBAAKtD,UAAU,eACb,4BACEA,UAAS,UAAKiD,EAAWD,IACzBzC,QAAS,kBAAMb,EAAM6D,SAASP,KAFhC,UAIMC,EAAWD,KAEjB,kBAAC,IAAD,CACE3C,GAAE,iBAAY6C,EAAZ,YAAwBC,GAC1B5C,QAAS,kBAAMb,EAAM8D,YAAY9D,EAAMoD,YAAa,yBAEpD,sDCgCGW,E,kDA7Db,aAAe,IAAD,8BACZ,gBAMFC,kBAAoB,WAClB,EAAKnE,SAAS,CAAEuD,YAAa,EAAKpD,MAAMqB,YAR5B,EAWd4C,mBAAqB,SAAAC,GACf,EAAKlE,MAAMqB,WAAa6C,EAAU7C,UACpC,EAAKxB,SAAS,CAAEuD,YAAa,EAAKpD,MAAMqB,YAX1C,EAAK7B,MAAQ,CACX4D,YAAa,IAHH,E,qDAiBJ,IACAA,EAAgBhD,KAAKZ,MAArB4D,YADD,EASHhD,KAAKJ,MANP6D,EAHK,EAGLA,SACAN,EAJK,EAILA,WACAO,EALK,EAKLA,YACA1C,EANK,EAMLA,kBACAoC,EAPK,EAOLA,SACAW,EARK,EAQLA,UAEF,OACE,6BAAS7D,UAAU,sBACO,IAAvB8C,EAAY3D,OACT2D,EAAYL,KAAI,SAAAqB,GACd,OACE,kBAAC,EAAD,CACEZ,SAAUA,EACVK,SAAUA,EACVN,WAAYA,EACZN,IAAKmB,EAAQd,WACbF,YAAagB,EACbN,YAAaA,EACb1C,kBAAmBA,OAIF,IAAvBgC,EAAY3D,SAAiB0E,GAC3B,yBAAK7D,UAAY,aAAjB,oCAA8D,yBAAKoD,IAAG,UFjD5D,WEiD4D,oBAAiCC,IAAO,4B,GA7C5FU,IAAMvD,WCiEvBwD,EAlEa,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,eAAgBV,EAA2B,EAA3BA,SAAUN,EAAiB,EAAjBA,WAErDD,EAKEiB,EALFjB,WACAjE,EAIEkF,EAJFlF,KACAgE,EAGEkB,EAHFlB,QACAV,EAEE4B,EAFF5B,QACAK,EACEuB,EADFvB,KAEEwB,EAAY,EAEVC,EAAmB9B,EAAQ+B,SAAS3B,KAAI,SAAA4B,GAC5C,IAAIC,EAAc,wBAAI3B,IAAKuB,GAAYG,GAEvC,OADAH,IACOI,KAGT,OACE,yBAAKtE,UAAU,yBACb,yBAAKA,UAAU,mBACb,yBAAKoD,IHtBW,WGsBKJ,EAAa,SAAUK,IAAKtE,EAAO,WACxD,yBAAKqE,IHvBW,WGuBKJ,EAAa,SAAUK,IAAKtE,EAAO,WACxD,yBAAKqE,IHxBW,WGwBKJ,EAAa,SAAUK,IAAKtE,EAAO,YAG1D,yBAAKiB,UAAU,mBACf,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UACb,4BAAKjB,GACL,uBAAGiB,UAAU,QAAQ0C,GACrB,uBAAG1C,UAAU,WAAb,YAAgC,8BAAO+C,EAAQO,OAAf,KAAyBP,EAAQwB,OAElElC,EAAQmC,WAAa,uBAAGxE,UAAU,cAAb,cAExB,yBAAKA,UAAU,cACb,4BACEA,UAAS,UAAKiD,EAAWD,IACzBzC,QAAS,kBAAMgD,EAASP,KAEvBC,EAAWD,KAGhB,yBAAKhD,UAAU,QACb,yBAAKA,UAAU,QACb,8CAAmB,kCAAQqC,EAAQoC,iBACnC,8CAAmB,8BAAOpC,EAAQqC,OAClC,mDAAwB,8BAAOrC,EAAQsC,SAEzC,yBAAK3E,UAAU,YACb,2BAAG,4CACH,4BACGmE,QCqBES,EAvEI,SAAAlF,GAyDjB,OACE,6BACE,wBAAImF,MAAO,CAAEC,cAAe,OAAQC,QAAS,IA1DvB,WACxB,IAAIC,EAActF,EAAMuF,KAAKhD,MAAM,KACnC+C,EAAYE,QA8BZ,IAAIC,GA7BJH,EAAcA,EAAYI,QACxB,SAACC,EAAQC,EAAQC,GACf,GAAc,IAAVA,EACFF,EAAOG,MAAMC,KAAK,CAChBR,KAAMK,EACNI,KAAM,SACNC,SAAUL,SAEP,GAAc,cAAXA,EACRD,EAAOG,MAAM,CAAC,CACZP,KAAM,YACNS,KAAK,IAAD,OAAMJ,GACVK,SAAUL,QAEP,CACL,IAAIM,EAAUP,EAAOQ,SAAW,IAAMP,EACtCD,EAAOG,MAAMC,KAAK,CAChBR,KAAMW,EACNF,KAAK,UAAD,OAAYJ,GAChBK,SAAUL,IAGd,IAAIQ,EAAYT,EAAOG,MAAMrG,OAAO,EAEpC,OADAkG,EAAOQ,SAAWR,EAAOG,MAAMM,GAAWb,KACnCI,IAET,CAAEQ,SAAU,GAAIL,MAAO,MAGUA,MAAM/C,KAAI,SAAAsD,GAC3C,MAAO,CACLC,UACE,wBAAIrD,IAAMoD,EAAML,MACd,kBAAC,IAAD,CAAOrF,GAAI0F,EAAML,MAAOK,EAAMJ,WAGlCM,aAAc,wBAAItD,IAAK,KAAKoD,EAAMJ,cAIlCO,EAAYlB,EAAYQ,MAAMrG,OAAS,EAC3C,OAAOgG,EAAiBC,QAAO,SAACe,EAAiBC,EAAOb,GAOtD,OANgBA,EAAQW,EAEtBC,EAAgBV,KAAKW,EAAMJ,UAAW,KAEtCG,EAAgBV,KAAKW,EAAMH,cAEtBE,IACN,IAOEE,MC4EMC,EAlIG,SAAC,GAYZ,IAXLzF,EAWI,EAXJA,SACA0B,EAUI,EAVJA,MACAlB,EASI,EATJA,eACAmC,EAQI,EARJA,YACAD,EAOI,EAPJA,SACAN,EAMI,EANJA,WACAlC,EAKI,EALJA,SACAY,EAII,EAJJA,WACAsC,EAGI,EAHJA,eACAsC,EAEI,EAFJA,oBACA1C,EACI,EADJA,UAEQ/C,EAAsBD,EAAtBC,kBACR,OACE,yBAAKd,UAAU,aACb,kBAAC,IAAD,CACEiF,KAAK,IACLuB,OAAQ,gBAAGrE,EAAH,EAAGA,SAAH,OAAkB,kBAAC,EAAD,CAAY8C,KAAM9C,EAASsE,cAGvD,yBAAKzG,UAAU,mBACb,kBAAC,IAAD,CACEwG,OAAQ,gBAAGrE,EAAH,EAAGA,SAAH,OACN,kBAAC,EAAD,CACEtB,SAAUA,EACVQ,eAAgBA,EAChBC,SAAUa,EAASsE,cAKzB,kBAAC,IAAD,KACoB,IAAjBlE,EAAMpD,QACL,kBAAC,IAAD,CACEuH,OAAK,EACLzB,KAAK,UACLuB,OAAQ,kBACN,kBAAC,EAAD,CAAejE,MAAOA,EAAOZ,WAAYA,OAI9B,GAAhBY,EAAMpD,QACL,kBAAC,IAAD,CACEuH,OAAK,EACLzB,KAAK,UACLuB,OAAQ,kBACN,yBAAKxG,UAAU,aAAf,kDAEE,yBACEoD,IAAG,UL3DC,WK2DD,oBACHC,IAAK,0BAMf,kBAAC,IAAD,CACEqD,OAAK,EACLzB,KAAK,aACLuB,OAAQ,WACN,OACE,kBAAC,EAAD,CACEtD,SAAU,YACVW,UAAWA,EACXL,YAAaA,EACbD,SAAUA,EACVN,WAAYA,EACZlC,SAAUwF,EACVzF,kBAAmBA,OAM3B,kBAAC,IAAD,CACE4F,OAAK,EACLzB,KAAK,aACLuB,OAAQ,YAAgB,IAChBtD,EADe,EAAZyD,MACcC,OAAOC,GAC9B,OACE,kBAAC,EAAD,CACE3D,SAAUA,EACVW,UAAWA,EACXL,YAAaA,EACbD,SAAUA,EACVN,WAAYA,EACZlC,SAAUA,EACVD,kBAAmBA,OAM3B,kBAAC,IAAD,CACE4F,OAAK,EACLzB,KAAK,uBACLuB,OAAQ,YAAgB,IAChBtD,EADe,EAAZyD,MACcC,OAAOC,GAC9B,OACE,kBAAC,EAAD,CACEtD,SAAUA,EACVN,WAAYA,EACZgB,eAAgBA,EAChBf,SAAUA,WChHf4D,EAAiB,SAAC/F,GAC7B,GAAuB,IAApBA,EAAS5B,OACV,MAAQ,GAEV,IAAM4H,EAAWhG,EAAS0B,KAAI,SAAAqB,GAC5B,OAAOkD,MAAMpE,EAAWkB,GACrBmD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAnD,GACJ,OAAO,eACFA,MAGNsD,OAAM,SAAAC,GACL,OAAOA,QAGb,OAAOC,QAAQC,IAAIR,IAURS,EAAiB,SAACC,GAC7B,IAAMV,EAAWU,EAASlF,MAAME,KAAI,SAAAC,GAClC,IAAMgF,EAAgBhF,EAAKL,QAC3B,OAAO2E,MAAMpE,EAAW8E,GACrBT,MAAK,SAAAU,GAAQ,OAAIA,EAASR,UAC1BF,MAAK,SAAAvF,GACJ,OAAO,aACLG,SAAUa,EAAKA,KACfL,QAAQK,EAAKL,SACVX,SAIX,OAAO4F,QAAQC,IAAIR,IC4GNa,E,kDAzIb,aAAe,IAAD,8BACZ,gBAiBFlE,kBAlBc,sBAkBM,4BAAAmE,EAAA,sEDRbb,MAAMpE,EAAS,iBACnBqE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAQ,GAAQ,OAAID,EAAeC,MAChCL,OAAM,SAAAC,GAAG,MAAI,MCKI,OACdS,EADc,OAElB,EAAKvI,SAAS,CAAEgD,MAAOuF,IAFL,2CAlBN,EAwBdnI,MAAQ,SAAAoI,GACN,IAAMC,EAAY,EAAK9I,MAAM2B,SAC7B,EAAKtB,SAAS,CACZsB,SAAS,eAAMmH,EAAP,GAAqBD,GAC7BrH,YAAY,KA5BF,EAgCdiB,WAhCc,uCAgCD,WAAOsG,EAAMC,EAAgBC,GAA7B,eAAAN,EAAA,6DACX,EAAKtI,SAAS,CAACsE,WAAU,IADd,SAEMiD,EAAeqB,GAFrB,OAEPC,EAFO,OAGX,EAAK7I,SAAS,CAAEwB,SAAUqH,IAC1B,EAAK7I,SAAS,CAACsE,WAAU,IAJd,2CAhCC,4DAuCdxC,eAvCc,sBAuCG,8BAAAwG,EAAA,6DACf,EAAKtI,SAAS,CAACsE,WAAU,IACrBwE,EAAmB,EAAKnJ,MAAM2B,SAASC,kBAF5B,SAGEgG,EAAeuB,GAHjB,OAGXD,EAHW,OAIf,EAAK7I,SAAS,CAAEgH,oBAAqB6B,IACrC,EAAK7I,SAAS,CAACsE,WAAU,IALV,2CAvCH,EAgDdL,YAAc,SAACV,EAAamF,GAC1B,EAAK1I,SAAS,CAAEyB,YAAaiH,EAAMhE,eAAgBnB,KAjDvC,EAqDdS,SAAW,SAAAsD,GAAO,IAEZyB,EADIxH,EAAsB,EAAK5B,MAAM2B,SAAjCC,kBAEJyH,EAAwB,EAAKrJ,MAAMqH,oBACvC,GAAIzF,EAAkBU,SAAlB,2BAA+CqF,IAAO,CACxD,IAAI2B,EAAgB1H,EAAkB2H,QAAO,SAAAtG,GAAQ,OAAIA,IAAQ,2BAAyB0E,MAE1F0B,EAAwBA,EAAsBE,QAAO,SAAAC,GAAY,OAAIA,EAAa1F,aAAa6D,KAC/FyB,EAAY,eACP,EAAKpJ,MAAM2B,SADJ,CAEVC,kBAAmB0H,SAGrBF,EAAY,eACP,EAAKpJ,MAAM2B,SADJ,CAEVC,kBAAkB,GAAD,mBAAMA,GAAN,4BAA6C+F,OAGlE,EAAKtH,SAAS,CAAEsB,SAAUyH,EAAa/B,oBAAoBgC,KAvE/C,EA0EdtF,WAAa,SAAA4D,GAEX,OAD8B,EAAK3H,MAAM2B,SAAjCC,kBACcU,SAAlB,2BAA+CqF,IAC1C,WAEA,oBA/EG,EAmFdlG,YAAc,SAACC,GAEb,OADA,EAAKrB,SAAL,eAAmBqB,IACZ,kBAAC,IAAD,CAAUP,GAAK,YAnFtB,EAAKnB,MAAQ,CACXwB,YAAY,EACZG,SAAU,CACR9B,KAAM,GACNK,MAAO,GACPE,QAAS,GACTwB,kBAAmB,IAErByB,MAAO,GACPxB,SAAS,GACTkD,eAAgB,GAChBsC,oBAAoB,GACpB1C,WAAU,GAdA,E,qDAwFJ,IAAD,EAUH/D,KAAKZ,MAPPqD,EAHK,EAGLA,MACA0B,EAJK,EAILA,eACAsC,EALK,EAKLA,oBACA1C,EANK,EAMLA,UACAnD,EAPK,EAOLA,WACAK,EARK,EAQLA,SACAF,EATK,EASLA,SAEF,OAEE,0BAAMb,UAAU,OAEZU,EAEE,kBAAC,IAAD,CAAUL,GAAK,WADhB,kBAAC,IAAD,CAAUA,GAAK,WAGlB,kBAAC,EAAD,CACEK,WAAYA,EACZC,YAAab,KAAKa,cAEpBD,GAAc,kBAAC,IAAD,CAAOuE,KAAK,KACxB,kBAAC,EAAD,CACE1C,MAAOA,EACPZ,WAAc7B,KAAK6B,WACnBsC,eAAgBA,EAChBV,SAAYzD,KAAKyD,SACjBgD,oBAAuBA,EACvBlF,eAAgBvB,KAAKuB,eACrBmC,YAAe1D,KAAK0D,YACpBP,WAAcnD,KAAKmD,WACnBY,UAAaA,EACb9C,SAAYA,EACZF,SAAUA,KAIhB,kBAAC,IAAD,CAAOoE,KAAK,UACV,kBAAC,EAAD,CAAOtF,MAAOG,KAAKH,SAGnB,kBAAC,EAAD,W,GApIUa,aCCEmI,QACW,cAA7BC,OAAOzG,SAAS0G,UAEe,UAA7BD,OAAOzG,SAAS0G,UAEhBD,OAAOzG,SAAS0G,SAASlC,MACvB,2DCVNmC,IAAStC,OACP,kBAAC,IAAMuC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdlC,OAAM,SAAAvH,GACLD,QAAQC,MAAMA,EAAM0J,c","file":"static/js/main.4500b359.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst validEmailRegex = RegExp(\n  // eslint-disable-next-line\n  /^(([^<>()\\[\\]\\.,;:\\s@\\']+(\\.[^<>()\\[\\]\\.,;:\\s@\\']+)*)|(\\'.+\\'))@(([^<>()[\\]\\.,;:\\s@\\']+\\.)+[^<>()[\\]\\.,;:\\s@\\']{2,})$/i\n);\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      purpose: \"\",\n      errors: {\n        name: \"\",\n        email: \"\",\n        purpose: \"default\"\n      }\n    };\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case \"name\":\n        errors.name =\n          value.length < 5 ? \"User Name must be 5 characters long!\" : \"\";\n        break;\n      case \"email\":\n        errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\n        break;\n      case \"purpose\":\n        errors.purpose =\n          value === \"default\" ? \"Choose Reason for Traveling.\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ errors, [name]: value })\n  };\n\n  handleSubmit = () => {\n    if (this.validateForm(this.state.errors)) {\n      const { name, email, purpose } = this.state;\n      this.props.login({\n        name: name,\n        email: email,\n        purpose: purpose\n      });\n    } else {\n      console.error(\"Invalid Form\");\n    }\n  };\n\n  validateForm = () => {\n    let valid = true;\n    const { errors, name, email } = this.state;\n    valid =\n      errors.email.length === 0 &&\n      errors.name.length === 0 &&\n      name !== \"\" &&\n      email !== \"\" &&\n      errors.purpose.length === 0;\n    return valid;\n  };\n\n  render() {\n    const { errors, name, email, purpose } = this.state;\n    const isEnabled = this.validateForm();\n    return (\n      <form>\n        <div className=\"input-wrapper\">\n          <span className=\"error\">{errors.name}</span>\n          <input\n            type=\"text\"\n            placeholder=\"User Name\"\n            name=\"name\"\n            value={name}\n            onChange={event => this.handleChange(event)}\n          />\n        </div>\n\n        <div className=\"input-wrapper\">\n          <span className=\"error\">{errors.email}</span>\n          <input\n            type=\"text\"\n            placeholder=\"Email@provider.com\"\n            name=\"email\"\n            value={email}\n            onChange={event => this.handleChange(event)}\n          />\n        </div>\n        <div className=\"input-wrapper\">\n          <select\n            name=\"purpose\"\n            aria-label=\"purpose of travel\"\n            value={purpose}\n            onChange={event => this.handleChange(event)}\n          >\n            <option value=\"default\">Select a Purpose</option>\n            <option value=\"buisness\">Buisness</option>\n            <option value=\"vacation\">Vaction</option>\n            <option value=\"other\"> Other</option>\n          </select>\n        </div>\n        <Link to=\"/areas\" >\n          <button disabled={!isEnabled} onClick={this.handleSubmit}>Login</button>\n        </Link>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func\n};\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({ isLoggedIn, toggleLogin }) => {\n  const blankUser = {\n    isLoggedIn: false,\n    userInfo: {\n      name: \"\",\n      email: \"\",\n      purpose: \"\",\n      favoriteLocations: []\n    },\n    listings:[],\n    currentView: 'Login'\n  }\n\n  return (\n    <header>\n      <div className=\"logo\">VRAD</div>\n      {isLoggedIn && (\n        <Link\n          to=\"/\"\n          onClick={() => toggleLogin(blankUser)}\n        >Log Out</Link>\n      )}\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  isLoggedIn: PropTypes.bool,\n  toggleLogin: PropTypes.func\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n        Built by:\n        <span>\n          Erik Raith |{\" \"}\n          <a href=\"https://github.com/ERaith\" target=\"_blank\" rel = \"noopener noreferrer\">\n            @github/ERaith\n          </a>\n        </span>\n        <span>\n          Harry Borrelli |{\" \"}\n          <a href=\"https://github.com/hborrelli1\" target=\"_blank\" rel = \"noopener noreferrer\">\n            @github/hborrelli1\n          </a>\n        </span>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst UserProfile = ({ userInfo, goToFavRentals,pathName}) => {\n\n  const { name, email, purpose, favoriteLocations } = userInfo;\n  const greeting = `Select from the following areas to find the perfect location for your ${purpose} trip!`;\n  const favoritePathHelper = () => {\n    if(pathName.includes('areas/favorites')){\n      return '/favorites'\n    } else if(pathName.includes('favorites')){\n      return '/areas'\n    } else {\n      return '/favorites'\n    }\n  }\n\n  return (\n    <div className=\"user-profile\">\n      <div className=\"welcome-header\">\n        <h3>{`Welcome, ${name}!`}</h3>\n        <p className=\"greeting\">{greeting}</p>\n        <p className=\"email\">{email}</p>\n      </div>\n      <div className=\"user-meta\">\n        <h4>Reason for visiting:</h4>\n        <p className=\"purpose\">{purpose}</p>\n        <Link\n          to= {favoritePathHelper()}\n          >\n          <button\n            className = {pathName.includes('favorites')?'favorite-button-active':'favorite-button-inactive'}\n            onClick={goToFavRentals}\n            >Favorited Rentals <span>{favoriteLocations.length}</span></button>\n        </Link>\n      </div>\n      <div></div>\n    </div>\n  )\n}\n\nUserProfile.propTypes = {\n  userInfo: PropTypes.object,\n  goToFavRentals: PropTypes.func,\n  pathName: PropTypes.string,\n\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nconst AreaCard = ({ areaInfo, changeView }) => {\n  const areaTitle = areaInfo.name !== areaInfo.nickName\n    ? `${areaInfo.name} - (${areaInfo.nickName})`\n    : areaInfo.name;\n\n  const buttonText = `View ${areaInfo.listings.length} Listings in ${areaInfo.nickName}`;\n\n  const areaURL = areaInfo.name.toLowerCase().split(' ').join('-');\n\n  return (\n    <div className=\"area-card\">\n      <div className=\"info\">\n        <h4>{areaTitle}</h4>\n        <p className=\"location\">{areaInfo.location}</p>\n        <p>{areaInfo.about}</p>\n      </div>\n      <Link\n        to={`/areas/${areaURL}`}\n        onClick={() => changeView('LocationContainer', areaInfo.details, areaInfo.listings)}\n      >\n        <button>{buttonText}</button>\n      </Link>\n    </div>\n  );\n}\n\nAreaCard.propTypes = {\n  areaInfo: PropTypes.object,\n  changeView: PropTypes.func\n}\n\nexport default AreaCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AreaCard from '../AreaCard/AreaCard';\n\nconst AreaContainer = ({ areas, changeView }) => {\n\n  const areaCards = areas.map(area => (\n    <AreaCard\n      key={area.name}\n      areaInfo={area}\n      changeView={changeView}\n    />\n  ));\n\n  return (\n\n    <div className=\"area-container\">\n      {areaCards}\n    </div>\n  )\n}\n\nAreaContainer.propTypes = {\n  areas: PropTypes.array,\n  changeView: PropTypes.func\n}\n\nexport default AreaContainer;\n","export const BASE_URL = 'https://vrad-api-eraith.herokuapp.com';\nexport const IMG_PATH = '/images/';\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMG_PATH } from \"../../constants/Constants\";\nimport { Link } from 'react-router-dom';\n\nconst LocationCard = props => {\n  const {\n    address,\n    name,\n    listing_id\n  } = props.listingData;\n  const { isFavorite, areaName } = props;\n  const urlName = name.toLowerCase().split(' ').join('-');\n\n  return (\n    <article className=\"card\">\n      <div className=\"img-container\">\n        <img src={`${IMG_PATH + listing_id}_a.jpg`} alt = {name+'Image'}/>\n      </div>\n      <div className=\"info-container\">\n        <h2 className=\"card-heading\" aria-label={name}>\n          {name}\n        </h2>\n        <h3 aria-label={address.street}>{address.street}</h3>\n        <div className=\"button-wrap\">\n          <button\n            className={`${isFavorite(listing_id)}`}\n            onClick={() => props.favorite(listing_id)}\n            >\n            {`${isFavorite(listing_id)}`}\n          </button>\n          <Link\n            to={`/areas/${areaName}/${urlName}`}\n            onClick={() => props.goToListing(props.listingData, \"LocationListingCard\")}\n            >\n            <button>Go to Listing</button>\n          </Link>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nLocationCard.propTypes = {\n  favorite: PropTypes.func,\n  favoriteLocations: PropTypes.array,\n  goToListing: PropTypes.func,\n  listingData: PropTypes.shape({\n    address: PropTypes.object,\n    area_id: PropTypes.number,\n    details: PropTypes.object,\n    name:PropTypes.string,\n    listing_id:PropTypes.number\n  }),\n  isFavorite:PropTypes.func,\n  areaName:PropTypes.string\n\n};\n\nexport default LocationCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LocationCard from \"../LocationCard/LocationCard\";\nimport { IMG_PATH } from \"../../constants/Constants\";\n\nclass LocationContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      listingData: []\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ listingData: this.props.listings });\n  };\n\n  componentDidUpdate = prevState => {\n    if (this.props.listings !== prevState.listings) {\n      this.setState({ listingData: this.props.listings });\n    }\n  };\n\n  render() {\n    const { listingData } = this.state;\n    const {\n      favorite,\n      isFavorite,\n      goToListing,\n      favoriteLocations,\n      areaName,\n      isLoading\n    } = this.props;\n    return (\n      <section className=\"location-conatiner\">\n        {listingData.length !== 0\n          ? listingData.map(listing => {\n              return (\n                <LocationCard\n                  areaName={areaName}\n                  favorite={favorite}\n                  isFavorite={isFavorite}\n                  key={listing.listing_id}\n                  listingData={listing}\n                  goToListing={goToListing}\n                  favoriteLocations={favoriteLocations}\n                />\n              );\n            })\n          : listingData.length === 0 && !isLoading && (\n              <div className = \"not-found\">You do not have any favroites yet<img src={`${IMG_PATH}NothingToSee.jpg`} alt = {'No Listings Found'} /></div>\n            )}\n      </section>\n    );\n  }\n}\n\nLocationContainer.propTypes = {\n  favorite: PropTypes.func,\n  favoriteLocations: PropTypes.array,\n  goToListing: PropTypes.func,\n  listings: PropTypes.array,\n  isFavorite:PropTypes.func,\n  areaName:PropTypes.string,\n  isLoading:PropTypes.bool\n};\n\nexport default LocationContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IMG_PATH } from \"../../constants/Constants\";\n\nconst LocationListingCard = ({ currentListing, favorite, isFavorite }) => {\n  const {\n    listing_id,\n    name,\n    address,\n    details,\n    area,\n  } = currentListing;\n  let uniqueKey = 0;\n\n  const locationFeatures = details.features.map(feat => {\n    let featureItem = <li key={uniqueKey}>{feat}</li>;\n    uniqueKey++;\n    return featureItem;\n  });\n\n  return (\n    <div className=\"location-listing-card\">\n      <div className=\"location-images\">\n        <img src={IMG_PATH + listing_id + '_a.jpg'} alt={name + ' image'} />\n        <img src={IMG_PATH + listing_id + '_b.jpg'} alt={name + ' image'} />\n        <img src={IMG_PATH + listing_id + '_c.jpg'} alt={name + ' image'} />\n      </div>\n\n      <div className=\"listing-details\">\n      <div className=\"location-info\">\n        <div className=\"header\">\n          <h3>{name}</h3>\n          <p className=\"area\">{area}</p>\n          <p className=\"address\">Address: <span>{address.street}, {address.zip}</span></p>\n        </div>\n        {details.superhost && <p className=\"super-host\">SUPERHOST</p>}\n      </div>\n      <div className=\"fav-button\">\n        <button\n          className={`${isFavorite(listing_id)}`}\n          onClick={() => favorite(listing_id)}\n        >\n          {isFavorite(listing_id)}\n        </button>\n      </div>\n      <div className=\"meta\">\n        <div className=\"info\">\n          <p>Cost Per Night: <span>${details.cost_per_night}</span></p>\n          <p>Number of Beds: <span>{details.beds}</span></p>\n          <p>Number of Bathrooms: <span>{details.baths}</span></p>\n        </div>\n        <div className=\"features\">\n          <p><span>Features:</span></p>\n          <ul>\n            {locationFeatures}\n          </ul>\n        </div>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nLocationListingCard.propTypes = {\n  favorite: PropTypes.func,\n  isFavorite: PropTypes.func,\n  currentListing: PropTypes.object,\n  areaName: PropTypes.string\n}\n\nexport default LocationListingCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Breadcrumb = props => {\n  const routeConstruction = () => {\n    let breadCrumbs = props.path.split(\"/\");\n    breadCrumbs.shift();\n    breadCrumbs = breadCrumbs.reduce(\n      (crumbs, curVal, index) => {\n        if (index === 0) {\n          crumbs.paths.push({\n            path: curVal,\n            link: \"/areas\",\n            linkText: curVal\n          });\n        } else if(curVal === 'favorites'){\n          crumbs.paths=[{\n            path: 'favorites',\n            link: `/${curVal}`,\n            linkText: curVal\n          }]\n        } else {\n          let newPath = crumbs.prevPath + \"/\" + curVal;\n          crumbs.paths.push({\n            path: newPath,\n            link: `/areas/${curVal}`,\n            linkText: curVal\n          });\n        }\n        let tempIndex = crumbs.paths.length-1;\n        crumbs.prevPath = crumbs.paths[tempIndex].path;\n        return crumbs;\n      },\n      { prevPath: \"\", paths: [] }\n    );\n\n    let breadCrumbsLinks = breadCrumbs.paths.map(route => {\n      return {\n        routeHTML: (\n          <li key ={route.link}>\n            <Link  to={route.link}>{route.linkText}</Link>\n          </li>\n        ),\n        endrouteHTML: <li key= \"s\">{route.linkText}</li>\n      };\n    });\n\n    let lastIndex = breadCrumbs.paths.length - 1;\n    return breadCrumbsLinks.reduce((breadCrumbStyle, child, index) => {\n      const notLast = index < lastIndex;\n      if (notLast) {\n        breadCrumbStyle.push(child.routeHTML, \"/\");\n      } else {\n        breadCrumbStyle.push(child.endrouteHTML);\n      }\n      return breadCrumbStyle;\n    }, []);\n\n  };\n\n  return (\n    <nav>\n      <ul style={{ listStyleType: \"none\", padding: 0 }}>\n        {routeConstruction()}\n      </ul>\n    </nav>\n  );\n};\n\nBreadcrumb.propTypes = {\n  path:PropTypes.string,\n  location: PropTypes.object\n}\n\nexport default Breadcrumb;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AreaContainer from \"../AreaContainer/AreaContainer\";\nimport LocationContainer from \"../LocationContainer/LocationContainer\";\nimport LocationListingCard from \"../LocationListingCard/LocationListingCard\";\nimport Breadcrumb from \"../Breadcrumb/Breadcrumb\";\nimport { IMG_PATH } from \"../../constants/Constants\";\n\nconst Dashboard = ({\n  userInfo,\n  areas,\n  goToFavRentals,\n  goToListing,\n  favorite,\n  isFavorite,\n  listings,\n  changeView,\n  currentListing,\n  favoriteListingData,\n  isLoading\n}) => {\n  const { favoriteLocations } = userInfo;\n  return (\n    <div className=\"dashboard\">\n      <Route\n        path=\"/\"\n        render={({ location }) => <Breadcrumb path={location.pathname} />}\n      />\n\n      <div className=\"content-wrapper\">\n        <Route\n          render={({ location }) => (\n            <UserProfile\n              userInfo={userInfo}\n              goToFavRentals={goToFavRentals}\n              pathName={location.pathname}\n            />\n          )}\n        />\n\n        <Switch>\n          {areas.length !== 0 && (\n            <Route\n              exact\n              path=\"/areas/\"\n              render={() => (\n                <AreaContainer areas={areas} changeView={changeView} />\n              )}\n            />\n          )}\n          {areas.length == 0 && (\n            <Route\n              exact\n              path=\"/areas/\"\n              render={() => (\n                <div className=\"not-found\">\n                  Oops we ran into some issues getting your data.\n                  <img\n                    src={`${IMG_PATH}NothingToSee.jpg`}\n                    alt={\"No Listings Found\"}\n                  />\n                </div>\n              )}\n            />\n          )}\n          <Route\n            exact\n            path=\"/favorites\"\n            render={() => {\n              return (\n                <LocationContainer\n                  areaName={\"favorites\"}\n                  isLoading={isLoading}\n                  goToListing={goToListing}\n                  favorite={favorite}\n                  isFavorite={isFavorite}\n                  listings={favoriteListingData}\n                  favoriteLocations={favoriteLocations}\n                />\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/areas/:id\"\n            render={({ match }) => {\n              const areaName = match.params.id;\n              return (\n                <LocationContainer\n                  areaName={areaName}\n                  isLoading={isLoading}\n                  goToListing={goToListing}\n                  favorite={favorite}\n                  isFavorite={isFavorite}\n                  listings={listings}\n                  favoriteLocations={favoriteLocations}\n                />\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/areas/:areaName/:id\"\n            render={({ match }) => {\n              const areaName = match.params.id;\n              return (\n                <LocationListingCard\n                  favorite={favorite}\n                  isFavorite={isFavorite}\n                  currentListing={currentListing}\n                  areaName={areaName}\n                />\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  favorite: PropTypes.func,\n  favoriteLocations: PropTypes.array,\n  goToListing: PropTypes.func,\n  listings: PropTypes.array,\n  userInfo: PropTypes.object,\n  areas: PropTypes.array,\n  goToFavRentals: PropTypes.func,\n  isFavorite: PropTypes.func,\n  changeView: PropTypes.func,\n  currentListing: PropTypes.object,\n  favoriteListingData: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nexport default Dashboard;\n","import { BASE_URL } from \"../constants/Constants\";\n\nexport const fetchLocations = (listings) => {\n  if(listings.length === 0) {\n    return  []\n  }\n  const promises = listings.map(listing => {\n    return fetch(BASE_URL + listing)\n      .then(res => res.json())\n      .then(listing => {\n        return {\n          ...listing\n        };\n      })\n      .catch(err => {\n        return err;\n      });\n  });\n  return Promise.all(promises);\n};\n\nexport const fetchAreas = () => {\n  return fetch(BASE_URL+'/api/v1/areas')\n    .then(res => res.json())\n    .then(areaData => getAreaDetails(areaData))\n    .catch(err => []);\n};\n\nexport const getAreaDetails = (areaData) => {\n  const promises = areaData.areas.map(area => {\n    const AREA_ENDPOINT = area.details;\n    return fetch(BASE_URL + AREA_ENDPOINT)\n      .then(response => response.json())\n      .then(areaInfo => {\n        return {\n          nickName: area.area,\n          details:area.details,\n          ...areaInfo\n        }\n      })\n  })\n  return Promise.all(promises);\n}\n","import React, { Component } from \"react\";\nimport Login from \"../Login/Login.js\";\nimport Header from \"../Header/Header.js\";\nimport Footer from \"../Footer/Footer\";\nimport \"./App.scss\";\nimport { Route, Redirect } from 'react-router-dom';\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport { fetchAreas } from \"../../ApiCalls/ApiCalls\";\nimport { fetchLocations } from \"../../ApiCalls/ApiCalls.js\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: false,\n      userInfo: {\n        name: \"\",\n        email: \"\",\n        purpose: \"\",\n        favoriteLocations: []\n      },\n      areas: [],\n      listings:[],\n      currentListing: {},\n      favoriteListingData:[],\n      isLoading:false\n    };\n  }\n\n  componentDidMount = async () => {\n    let areasList = await fetchAreas();\n    this.setState({ areas: areasList });\n  }\n\n\n  login = userData => {\n    const userState = this.state.userInfo;\n    this.setState({\n      userInfo: { ...userState, ...userData },\n      isLoggedIn: true\n    });\n  };\n\n  changeView = async (view, destinationURL, areaListings) => {\n    this.setState({isLoading:true})\n    let data = await fetchLocations(areaListings);\n    this.setState({ listings: data});\n    this.setState({isLoading:false})\n  }\n\n  goToFavRentals = async() => {\n    this.setState({isLoading:true})\n    let favoriteListings = this.state.userInfo.favoriteLocations;\n    let data = await fetchLocations(favoriteListings);\n    this.setState({ favoriteListingData: data});\n    this.setState({isLoading:false})\n\n  };\n\n  goToListing = (listingData, view) => {\n    this.setState({ currentView: view, currentListing: listingData });\n  };\n\n\n  favorite = id => {\n    const { favoriteLocations } = this.state.userInfo;\n    let updatedState;\n    let filteredFavoritesData = this.state.favoriteListingData;\n    if (favoriteLocations.includes(`/api/v1/listings/${id}`)) {\n      let filteredArray = favoriteLocations.filter(location => location !== `/api/v1/listings/${id}`);\n      // Logic to filter favoritedlistingData state and change it.\n      filteredFavoritesData = filteredFavoritesData.filter(favoriteData => favoriteData.listing_id!==id)\n      updatedState = {\n        ...this.state.userInfo,\n        favoriteLocations: filteredArray\n      };\n    } else {\n      updatedState = {\n        ...this.state.userInfo,\n        favoriteLocations: [...favoriteLocations, `/api/v1/listings/${id}`]\n      };\n    }\n    this.setState({ userInfo: updatedState,favoriteListingData:filteredFavoritesData});\n  };\n\n  isFavorite = id => {\n    const { favoriteLocations } = this.state.userInfo;\n    if (favoriteLocations.includes(`/api/v1/listings/${id}`)) {\n      return \"favorite\";\n    } else {\n      return \"add-to-favorites\";\n    }\n  };\n\n  toggleLogin = (blankUser) => {\n    this.setState({ ...blankUser })\n    return <Redirect to = \"/login\"/>\n  }\n\n  render() {\n\n    const {\n      areas,\n      currentListing,\n      favoriteListingData,\n      isLoading,\n      isLoggedIn,\n      listings,\n      userInfo\n    } = this.state;\n    return (\n\n      <main className=\"App\">\n\n        {!isLoggedIn ?\n           <Redirect to = \"/login\"/>\n          : <Redirect to = '/areas'/>}\n\n        <Header\n          isLoggedIn={isLoggedIn}\n          toggleLogin={this.toggleLogin}\n        />\n      { isLoggedIn && <Route path=\"/\">\n          <Dashboard\n            areas={areas}\n            changeView = {this.changeView}\n            currentListing={currentListing}\n            favorite = {this.favorite}\n            favoriteListingData = {favoriteListingData}\n            goToFavRentals={this.goToFavRentals}\n            goToListing = {this.goToListing}\n            isFavorite = {this.isFavorite}\n            isLoading = {isLoading}\n            listings = {listings}\n            userInfo={userInfo}\n            />\n\n      </Route>}\n      <Route path=\"/login\" >\n        <Login login={this.login} />\n      </Route>\n\n        <Footer />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Sass/application.scss';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}